package com.javarush.task.task31.task3105;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.Map;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

/*
Добавление файла в архив. Скачать файлы из архива, добавить новый файл, который приходит первым тоже в архив, в новую папку.
*/
public class Solution {
    public static void main(String[] args) throws IOException {

        String archiveName = Paths.get(args[0]).getFileName().toString();
        String newArchiveName = "new/" + archiveName;
        ZipEntry entry;
        Map<String, ByteArrayOutputStream> map = new HashMap<>();

        ZipInputStream zip = new ZipInputStream(new FileInputStream(args[1]));
        while ((entry = zip.getNextEntry())!= null){
            if (entry.getName().endsWith(archiveName)){
                newArchiveName = entry.getName();
            } else {
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                int length = 0;
                byte[] buffer = new byte[1024];
                while ((length = zip.read(buffer))!=-1){
                    baos.write(buffer,0, length);
                }
                map.put(entry.getName(), baos);
            }
        }
        zip.close();

        ZipOutputStream zipOut = new ZipOutputStream(new FileOutputStream(args[1]));
            zipOut.putNextEntry(new ZipEntry(newArchiveName));
        Files.copy(Paths.get(args[0]), zipOut);

        for (Map.Entry<String, ByteArrayOutputStream> pair: map.entrySet()) {
            zipOut.putNextEntry(new ZipEntry(pair.getKey()));
            pair.getValue().writeTo(zipOut);
        }
        zipOut.close();
    }
}
