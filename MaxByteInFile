import javax.imageio.metadata.IIOInvalidTreeException;
import java.io.*;
import java.util.*;

/* 
Нити и байты. Найти в переданных файлах максимально повторяющийся символ и записать его вместе с именем файла в resultMap
*/

public class Solution {
    public static Map<String, Integer> resultMap = new HashMap<String, Integer>();

    public static void main(String[] args) throws IOException {

        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String str = reader.readLine();
        while (!str.equals("exit")){
            ReadThread readThread = new ReadThread(str);
            readThread.start();
            str = reader.readLine();
        }
        reader.close();

    }

    public static class ReadThread extends Thread {
        private String fileName;
        Map<Integer, Integer> treemap = new TreeMap<>();
        List<Integer> list = new ArrayList<>();
        public ReadThread(String fileName) {
            this.fileName = fileName;
        }

        @Override
        public void run() {
            try (FileInputStream fileInputStream = new FileInputStream(fileName)) {
                while (fileInputStream.available() > 0){
                    int i = fileInputStream.read();
                    treemap.merge(i, 1, (oldVal, newVal) -> oldVal + newVal);
                }
                for (Map.Entry<Integer, Integer> map : treemap.entrySet()) {
                    list.add(map.getValue());
                }
                Collections.sort(list);
                Collections.reverse(list);
                for (Map.Entry<Integer,Integer> map: treemap.entrySet()){
                    if (map.getValue().equals(list.get(0))){
                        resultMap.put(fileName, map.getKey());
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
